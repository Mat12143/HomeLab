services:
  # Pihole ad blocking service
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    network_mode: host
    env_file:
      - path: ./.env
    environment:
      - WEB_PORT=${HOMEPAGE_VAR_PIHOLE_PORT}
      - TZ=${TZ}
    volumes:
      - ./dockerData/pihole/config:/etc/pihole
      - ./dockerData/pihole/dnsmasq:/etc/dnsmasq.d
    cap_add:
      - NET_ADMIN
    restart: unless-stopped

  # Homepage for the lab
  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    env_file:
      - path: ./.env
    ports:
      - 80:3000
    volumes:
      - ./dockerData/homepage/:/app/config
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # The disk for backup for DietPI
      - /mnt/backup:/backup
    restart: unless-stopped

  # Backup frontend
  backrest:
    image: garethgeorge/backrest:latest
    container_name: backrest
    env_file:
      - path: ./.env
    ports:
      - 9898:9898
    volumes:
      - ./dockerData/backrest/data:/data
      - ./dockerData/backrest/config:/config
      - ./dockerData/backrest/cache:/cache
      - /mnt/backup:/repo
      - ./dockerData:/toBackup
      - ./dockerData/backrest/restore:/restore
    environment:
      - BACKREST_DATA=/data # path for backrest data. restic binary and the database are placed here.
      - BACKREST_CONFIG=/config/config.json # path for the backrest config file.
      - XDG_CACHE_HOME=/cache # path for the restic cache which greatly improves performance.
      - BACKREST_PORT=${HOMEPAGE_VAR_BACKREST_PORT}
    restart: unless-stopped

  diun:
    image: crazymax/diun:latest
    command: serve
    hostname: homy
    container_name: diun
    volumes:
      - ./dockerData/diun/:/data
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - TZ=${TZ}
      - DIUN_WATCH_WORKERS=20
      - DIUN_WATCH_SCHEDULE=0 */6 * * *
      - DIUN_WATCH_JITTER=30s
      - DIUN_PROVIDERS_DOCKER=true
      - DIUN_PROVIDERS_DOCKER_WATCHBYDEFAULT=true
      - DIUN_NOTIF_DISCORD_WEBHOOKURL=${DIUN_DISCORD_WEBHOOK}
      - DIUN_NOTIF_DISCORD_TEMPLATEBODY=Docker tag {{ if .Entry.Image.HubLink }}[**{{ .Entry.Image }}**]({{ .Entry.Image.HubLink }}){{ else }}**{{ .Entry.Image }}**{{ end }} is available on {{ .Entry.Image.Domain }} ({{ .Meta.Hostname }})
